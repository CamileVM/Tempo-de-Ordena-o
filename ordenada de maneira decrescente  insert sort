import java.util.Random;

public class InsertionSortBenchmark {

    public static void main(String[] args) {
        int numSamples = 100; // Número de repetições
        int arraySize = 100000; // Tamanho do vetor
        int[] reversedArray = generateReversedArray(arraySize);

        long totalElapsedTime = 0;

        for (int i = 0; i < numSamples; i++) {
            int[] arr = reversedArray.clone(); // Copia o vetor em ordem decrescente
            long startTime = System.nanoTime();
            insertionSort(arr);
            long endTime = System.nanoTime();
            totalElapsedTime += (endTime - startTime);
        }

        double averageTime = (double) totalElapsedTime / numSamples / 1e9; // Convertendo para segundos

        System.out.printf("Tempo médio para ordenar %d elementos em ordem decrescente: %.6f segundos%n", arraySize, averageTime);
    }

    public static void insertionSort(int[] arr) {
        int n = arr.length;
        for (int i = 1; i < n; i++) {
            int key = arr[i];
            int j = i - 1;

            while (j >= 0 && arr[j] < key) {
                arr[j + 1] = arr[j];
                j--;
            }
            arr[j + 1] = key;
        }
    }

    public static int[] generateReversedArray(int size) {
        int[] arr = new int[size];
        for (int i = 0; i < size; i++) {
            arr[i] = size - i;
        }
        return arr;
    }
}
