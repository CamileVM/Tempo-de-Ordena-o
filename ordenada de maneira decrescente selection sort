import java.util.Arrays;

public class SelectionSortBenchmark {
    public static void main(String[] args) {
        int[] arr = generateDescendingArray(100000);
        long totalExecutionTime = 0;
        int numberOfExecutions = 10;

        for (int i = 0; i < numberOfExecutions; i++) {
            int[] arrCopy = Arrays.copyOf(arr, arr.length);
            long startTime = System.nanoTime();
            selectionSort(arrCopy);
            long endTime = System.nanoTime();
            totalExecutionTime += (endTime - startTime);
        }

        long averageExecutionTime = totalExecutionTime / numberOfExecutions;
        System.out.println("Average Execution Time (in nanoseconds): " + averageExecutionTime);
    }

    public static int[] generateDescendingArray(int size) {
        int[] arr = new int[size];
        for (int i = 0; i < size; i++) {
            arr[i] = size - i;
        }
        return arr;
    }

    public static void selectionSort(int[] arr) {
        int n = arr.length;

        for (int i = 0; i < n - 1; i++) {
            int minIndex = i;
            for (int j = i + 1; j < n; j++) {
                if (arr[j] < arr[minIndex]) {
                    minIndex = j;
                }
            }

            int temp = arr[minIndex];
            arr[minIndex] = arr[i];
            arr[i] = temp;
        }
    }
